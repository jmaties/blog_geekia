{"componentChunkName":"component---src-templates-articulo-js","path":"/blog/no-siempre-un-modulo-es-lo-mejor","result":{"data":{"nodeArticulo":{"title":"No siempre un módulo es lo mejor ;)","body":{"value":"<p>Hace unos días, preparando un proyecto para un cliente nos surgió un pequeño dilema ¿Usar un módulo específico para un tipo de operación o bien utilizar módulos más comunes como <em> views </em> para hacer algo parecido? La cuestión es que necesitabamos preparar un gestor de publicidad con todo lo que puede utilizar un usuario medio pero sin todas la complejidad de los módulos específicos. En resumen necesitábamos algo&nbsp; <strong> MUY ágil y sencillo </strong> para gestionar&nbsp;\"una publicidad\" que aparecerá en unos determinados nodos o vistas. Drupal dispone de varios módulos, los cuales probamos para ver si era lo que necesitabamos.</p><p><a href=\"http://drupal.org/project/ad\"> Ad </a> era sin duda la mejor opción, pero es tan \"grande\" que parecía que estabamos <em> matando moscas a cañonazos. </em> Probamos con <a href=\"http://drupal.org/project/simpleads\"> SimpleAds </a> , también un genial módulo pero al igual que ocurría con el anterior... demasiado grande.</p><p>Así que decidimos hacerlo de una forma \"artesanal\", usando <a href=\"http://drupal.org/project/views\"> views </a> y un poco de código.</p><p class=\"imagen_post\"><img src=\"http://farm9.staticflickr.com/8186/8115491731_4389715f82.jpg\" alt=\"Drupal modules\" style=\"width: 500px; height: 442px;\" /></p><p>Lo primero que preparamos fue un tipo de contenido <strong> publicidad </strong> con los campos que necesitábamos, no son muchos:</p><ul><li>Título</li><li>Cuerpo de la noticia</li><li>Imagen/banner</li><li>Localización (Taxonomia)</li><li>Tema (que es un campo que comparte con otro tipo de nodo)</li><li>Fecha (Inicio y fin)</li><li>Enlace</li></ul><p>Una vez listo, preparamos una views con 2 <em> contextual filters </em> que son la localización y el tema. El bloque generado por la views sólo se mostrará en un determinado tipo de contenido y para elegir cuál usamos la \"maravillosa\" API de views3... <strong> hook_views_query_alter(&amp;$view, &amp;$query) </strong> para ello, por ejemplo, para el tema, lo unico que hacemos es buscar el valor de ese campo en el nodo cargado y modificar la query de la views.</p><p>Ej:</p><pre>$id_nodo = arg(1); // Cargamos la id del nodo actual\r\n    $result = db_select('TABLA', 'u') \r\n      -&gt;fields('u', array('CAMPO'))\r\n      -&gt;condition('entity_id', $id_nodo, '=')\r\n      -&gt;execute() -&gt;fetchAll();\r\n    $tema = $result[0]-&gt;CAMPO_value;\r\n    $query-&gt;where[0]['conditions'][1]['value']= $tema;\r\n</pre><p>De esta forma ya tenemos nuestro mini-gestor de publicidad. Pero necesitábamos tambien contar con estadísticas de clicks. Tiramos de otro módulo que tambien usaba ya el proyecto para generar url cortas:&nbsp; <a href=\"http://drupal.org/project/shurly\"> ShURLy </a> (mola como suena :P). Así, poniendo la url corta en el enlace del nodo <strong> publicidad </strong> podemos tener los \"clicks\" que se han hecho en anuncio concreto.</p><p>Además de todo esto, preparamos un <em> views </em> de administración para poder \"gestionar\" de forma directa —y, por tanto más sencilla— la publicidad.</p><p>En este ejemplo hablamos de gestión de espacios publicitarios, pero echándole un poco de imaginación pueden surgir bastantes más utilidades sin necesidad de instalar más módulos</p>"},"created":"2012-10-22T20:39:24+00:00"}},"pageContext":{"id":"a98cfce4-4ef1-5812-a77c-dc4b5269ae10"}}}