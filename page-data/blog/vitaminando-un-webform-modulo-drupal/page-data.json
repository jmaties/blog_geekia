{"componentChunkName":"component---src-templates-articulo-js","path":"/blog/vitaminando-un-webform-modulo-drupal","result":{"data":{"nodeArticulo":{"title":"Vitaminando un webform. [Modulo Drupal]","body":{"value":"<p>Cuando repetimos un código muchas veces para usarlo en los proyectos, es cuando llega el momento de crear un módulo. Eso nos ha pasado con una necesidad que teníamos al tratar con usuarios anónimos en <a href=\"http://drupal.org/project/webform\"> webform</a>: que no se pudieran duplicar envíos con un mismo email o un mismo DNI.</p>\r\n<p class=\"imagen_post\"><img alt=\"WebformData\" data-entity-type=\"\" data-entity-uuid=\"\" src=\"/sites/default/files/webformdata.jpg\"/></p>\r\n<p>La solución era sencilla, modificamos el formulario con&nbsp; <em> <a href=\"http://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_form_alter/7\"> hook_form_alter(&amp;$form, &amp;$form_state, $form_id)</a>, </em>comprobamos el ID del webform y lo validamos con una funcion que comprueba si está ese dato en la tabla&nbsp; <em> <span style=\"line-height: 1.538em;\"> webform_submitted_data </span> </em> <span style=\"line-height: 1.538em;\"> : </span></p>\r\n\r\n<pre>\r\n/* validar formularios */ \r\nfunction EJEMPLO_form_alter(&amp;$form, &amp;$form_state, $form_id){ \r\n if ($form['form_id']['#value']=='webform_client_form_'.$ID_WEBFORM):\r\n   $form['#validate'][] = 'EJEMPLO_form_validate'; \r\n  endif; \r\n } \r\n        \r\nfunction EJEMPLO_form_validate($form, $form_state) { \r\n/* VALIDAMOS QUE EXISTE */ \r\n $id = $form['#form_id']; \r\n $dato = $form_state['values']['submitted']['email']; /* En este caso el email */ \r\n\r\n /* el id_formulario lo toma de una funcion que le indica donde está el cid dentro de la tabla webform_submitted_data */ \r\n if (count(_existsdato($dato, $id_formulario)) &gt;= 1) { //Si hay 1 es que ya está en la bbdd \r\n  form_set_error('email', t('El email ya está dado de alta')); // display error and highlight \r\n } \r\n} \r\n        \r\nfunction _existsdato($dato, $id) { \r\n $result = db_select('webform_submitted_data', 'u')\r\n        \t -&gt;fields('u', array('sid', 'data')) \r\n        \t -&gt;condition('nid', $id[0], ' = ') \r\n        \t -&gt;condition('cid', $id[1], ' = ') \r\n        \t -&gt;condition('data',$dato, ' = ') \r\n        \t -&gt;execute() \r\n        \t -&gt;fetchAll(); \r\n return $result; \r\n}\r\n</pre>\r\n\r\n<p>No está mal la solución, pero siempre que se genera un nuevo webform hay que modificar el código e incluir el nuevo id, y eso hace que el trabajo que no vaya tan rápido porque no soy yo el que me encargo de crearlos (sí,&nbsp; <a href=\"https://twitter.com/jlucles\"> @jlucles</a>, te miro a ti) <span style=\"line-height: 1.538em;\"> . </span></p>\r\n\r\n<p><span style=\"line-height: 1.538em;\">Así que para evitar todo esto \"tiramos\" del módulo </span> <a href=\"http://drupal.org/project/webform_validation\" style=\"line-height: 1.538em;\"> Webform Validation </a> <span style=\"line-height: 1.538em;\"> y su&nbsp; </span> <strong style=\"line-height: 1.538em;\"> <em> h<strong><em>oo</em>k </strong> _webform_validation_validate($validator_name, $items, $components, $rule) </em> </strong> <span style=\"line-height: 1.538em;\"> y todos nuestros problemas desaparecieron ;) </span></p>\r\n\r\n<p>Ahora todos los valores que necesitamos para validar el formulario los obtenemos del parametro <strong> $rules </strong> de la función anterior. De esta forma tenemos:</p>\r\n\r\n<ul>\r\n\t<li>id del formulario : $rule['nid'];</li>\r\n\t<li>cid del campo de busqueda: $rule['components'][0]['cid'];</li>\r\n</ul>\r\n\r\n<p>Ya se puede validar que un campo no esté duplicado en otro envío. Y como de costumbre, hemos añadido un extra: &nbsp;que también valide el DNI, algo que hemos necesitado alguna que otra vez ;)</p>\r\n\r\n<p><a href=\"http://drupal.org/sandbox/geekia/1895492\">Descarga el módulo </a>desde nuestra cuenta sandbox.</p>\r\n"},"created":"2013-02-11T12:00:46+00:00"}},"pageContext":{"id":"2fc40b0d-b596-5d8a-aab5-7f7df63290ff"}}}